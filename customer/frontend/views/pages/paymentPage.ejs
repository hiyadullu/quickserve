<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QuickServe - Payment</title>
    <style>
        
        /* Define color palette */
        :root {
            --peach: #EDAFB8;
            --light-peach: #F7E1D7;
            --beige: #DEDBD2;
            --sage: #B0C4B1;
            --charcoal: #4A5759;
        }

        body {
            background-color: var(--light-peach);
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            min-height: 100vh;
            box-sizing: border-box;
        }

        .container {
            width: 90%;
            max-width: 600px;
            background-color: var(--beige);
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.1);
            position: relative;
            display: flex;
            flex-direction: column;
            padding: 30px;
            margin: 20px 0;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
            position: relative;
        }

        .left-section {
            background-color: var(--peach);
            width: 200px;
            height: 100%;
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            clip-path: circle(60% at left center);
        }

        .icon {
            width: 60px;
            height: 60px;
            background-color: var(--peach);
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            margin: 0 auto 10px;
            font-size: 24px;
            color: var(--light-peach);
        }

        h1 {
            font-size: 32px;
            color: var(--charcoal);
            margin: 10px 0;
        }

        h2 {
            font-size: 22px;
            color: var(--charcoal);
            margin: 0 0 20px;
        }

        .table-info {
            color: var(--charcoal);
            font-size: 16px;
            margin-bottom: 20px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .table-info div {
            margin: 5px 0;
        }

        .order-details {
            background-color: white;
            border-radius: 8px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(0,0,0,0.05);
        }

        .order-items {
            margin-bottom: 20px;
        }

        .order-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 0;
            border-bottom: 1px solid var(--light-peach);
            transition: all 0.3s ease;
        }

        .order-item:hover {
            transform: translateX(5px);
        }

        .order-item:last-child {
            border-bottom: none;
        }

        .item-name {
            flex: 2;
            color: var(--charcoal);
            font-weight: 500;
        }

        .item-quantity {
            flex: 1;
            text-align: center;
            color: var(--sage);
            font-weight: 500;
        }

        .item-price {
            flex: 1;
            text-align: right;
            color: var(--charcoal);
            font-weight: 600;
        }

        .order-total {
            font-size: 24px;
            font-weight: bold;
            margin: 20px 0;
            text-align: center;
            color: var(--charcoal);
            padding-top: 20px;
            border-top: 2px solid var(--peach);
        }

        .payment-options {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 30px;
        }

        .payment-option {
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            transition: all 0.3s ease;
            background-color: var(--peach);
            color: white;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            letter-spacing: 1px;
        }

        .payment-option:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
            background-color: #d69a8a;
        }

        .payment-option.active {
            background-color: var(--peach);
            color: white;
        }

        .payment-content {
            display: none;
            opacity: 0;
            transition: opacity 0.5s ease;
            animation: fadeIn 0.5s ease forwards;
            background-color: white;
            border-radius: 8px;
            padding: 25px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
            border: 1px solid rgba(0,0,0,0.05);
        }

        .payment-content.active {
            display: block;
            opacity: 1;
        }

        .qr-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            margin: 20px 0;
        }

        .qr-code {
            width: 200px;
            height: 200px;
            background-color: white;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
            margin-bottom: 15px;
            border: 1px solid var(--light-peach);
        }

        .qr-code img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }

        .qr-instruction {
            text-align: center;
            color: var(--charcoal);
            margin-bottom: 20px;
            font-size: 14px;
            letter-spacing: 0.5px;
        }

        .cash-message {
            text-align: center;
            font-size: 18px;
            color: var(--charcoal);
            margin: 40px 0;
            line-height: 1.6;
            letter-spacing: 0.5px;
        }

        .order-confirmation {
            margin-top: 20px;
            padding: 25px;
            background-color: var(--sage);
            border-radius: 8px;
            text-align: center;
            color: white;
            display: none;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            animation: fadeIn 0.5s ease forwards;
        }

        .order-confirmation h3 {
            margin-top: 0;
            margin-bottom: 10px;
            font-size: 24px;
            letter-spacing: 1px;
        }

        .confirm-button {
            display: block;
            width: 100%;
            padding: 15px;
            border: none;
            border-radius: 8px;
            background-color: var(--peach);
            color: white;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 20px;
            letter-spacing: 1px;
        }

        .confirm-button:hover {
            background-color: #d69a8a;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .loader {
            border: 5px solid #f3f3f3;
            border-top: 5px solid var(--peach);
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
            display: none;
        }

        .back-button {
            display: inline-block;
            margin-top: 20px;
            color: var(--charcoal);
            text-decoration: none;
            font-size: 14px;
            transition: all 0.3s ease;
            letter-spacing: 0.5px;
            padding: 10px 20px;
            border-radius: 5px;
            background-color: var(--light-peach);
        }

        .back-button:hover {
            color: var(--peach);
            background-color: white;
            transform: translateY(-2px);
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes qrAppear {
            0% { transform: scale(0.8); opacity: 0; }
            100% { transform: scale(1); opacity: 1; }
        }

        .qr-animation {
            animation: qrAppear 0.5s ease forwards;
        }

        .pattern-bg {
            background-image: url('https://www.transparenttextures.com/patterns/asfalt-light.png');
            position: absolute;
            width: 100%;
            height: 100%;
            opacity: 0.2;
            z-index: -1;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="icon">⛩</div>
            <h1><%= restaurantName %></h1>
            
            <h2>Complete Your Order</h2>
            <div class="table-info">
                <div>Table Number: <%= tableNumber %></div>
            </div>
        </div>

        <div class="order-details">
            <div class="order-items">
                <% Object.values(items).forEach(item => { %>
                    <div class="order-item">
                        <span class="item-name"><%= item.name %></span>
                        <span class="item-quantity">x<%= item.quantity %></span>
                        <span class="item-price">$<%= (item.price * item.quantity).toFixed(2) %></span>
                    </div>
                <% }); %>
            </div>
            <div class="order-total" id="orderTotalDisplay">
                Total: $<%= total.toFixed(2) %>
            </div>
        </div>

        <div class="payment-options">
            <button class="payment-option" id="upiOption" onclick="selectPaymentMethod('upi')">Pay with UPI</button>
            <button class="payment-option" id="cashOption" onclick="selectPaymentMethod('cash')">Pay with Cash</button>
        </div>

        <div class="payment-content" id="upiPayment">
            <div class="qr-container">
                <div class="qr-code" id="qrCodeContainer">
                    <!-- Placeholder QR code -->
                    <img src="/public/images/QR.jpg" alt="QR Code">
                </div>
                <div class="qr-instruction">Scan this QR code with your UPI app to complete payment</div>
            </div>
            <button class="confirm-button" onclick="confirmPayment('upi')">I've Completed the Payment</button>
        </div>

        <div class="payment-content" id="cashPayment">
            <div class="cash-message">
                Thank you for choosing to pay with cash.<br>
                Your order is being prepared and will be ready for pickup/delivery shortly.<br>
                Please pay the amount when you receive your order.
            </div>
            <button class="confirm-button" onclick="confirmPayment('cash')">Confirm Order</button>
        </div>

        <div class="loader" id="paymentLoader"></div>

        <div class="order-confirmation" id="orderConfirmation">
            <h3>Thank you for your order!</h3>
            <p>Your order has been confirmed and is being prepared.</p>
            <p id="confirmationMessage"></p>
            <p id="orderId"></p>
        </div>

        <a href="/customer/<%= restaurantId %>" class="back-button" onclick="clearCartStorage()">← Back to Menu</a>

    </div>

    <script>
        const orderData = {
            restaurantId: '<%= restaurantId %>',
            restaurantName: '<%= restaurantName %>',
            tableNumber: '<%= tableNumber %>',
            items: JSON.parse('<%- JSON.stringify(items) %>'),
            total: <%= total %>
        };

        // Generate a unique cart ID if it doesn't exist
        let cartId = localStorage.getItem('currentCartId');
        if (!cartId) {
            cartId = 'cart_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
            localStorage.setItem('currentCartId', cartId);
        }
        
        window.onload = function() {
            // Add beforeunload event listener to clear storage when leaving the page
            window.addEventListener('beforeunload', function() {
                clearCartStorage();
            });
            
            // Check if order was already confirmed for this cart
            const orderKey = `order_${orderData.restaurantId}_${orderData.tableNumber}_${cartId}`;
            const confirmedOrder = localStorage.getItem(orderKey);
            
            if (confirmedOrder) {
                // Show confirmation message
                const confirmation = document.getElementById('orderConfirmation');
                confirmation.style.display = 'block';
                
                // Hide payment options and content
                document.getElementById('upiOption').style.display = 'none';
                document.getElementById('cashOption').style.display = 'none';
                document.getElementById('upiPayment').style.display = 'none';
                document.getElementById('cashPayment').style.display = 'none';
                
                // Set confirmation message based on stored payment method
                const confirmMsg = document.getElementById('confirmationMessage');
                const orderData = JSON.parse(confirmedOrder);
                if (orderData.paymentMethod === 'upi') {
                    confirmMsg.innerText = 'Your payment via UPI has been received.';
                } else {
                    confirmMsg.innerText = 'Please pay in cash upon delivery/pickup.';
                }
                return;
            }

            // Update the page with order details
            document.querySelector('h1').textContent = orderData.restaurantName;
            document.querySelector('.table-info').innerHTML = `
                <div>Table Number: ${orderData.tableNumber}</div>
            `;

            // Update order items
            const orderItemsContainer = document.querySelector('.order-items');
            let itemsHtml = '';
            let total = 0;

            Object.values(orderData.items).forEach(item => {
                const itemTotal = item.price * item.quantity;
                total += itemTotal;
                itemsHtml += `
                    <div class="order-item">
                        <span class="item-name">${item.name}</span>
                        <span class="item-quantity">x${item.quantity}</span>
                        <span class="item-price">$${itemTotal.toFixed(2)}</span>
                    </div>
                `;
            });

            orderItemsContainer.innerHTML = itemsHtml;
            document.getElementById('orderTotalDisplay').textContent = `Total: $${total.toFixed(2)}`;

            // Initialize with UPI option selected
            selectPaymentMethod('upi');
        };

        function selectPaymentMethod(method) {
            // Reset all options
            document.getElementById('upiOption').classList.remove('active');
            document.getElementById('cashOption').classList.remove('active');
            
            document.getElementById('upiPayment').classList.remove('active');
            document.getElementById('cashPayment').classList.remove('active');
            
            // Activate selected option
            document.getElementById(method + 'Option').classList.add('active');
            document.getElementById(method + 'Payment').classList.add('active');
            
            // Add animation for QR code if UPI is selected
            if (method === 'upi') {
                const qrCode = document.getElementById('qrCodeContainer');
                qrCode.classList.add('qr-animation');
                setTimeout(() => {
                    qrCode.classList.remove('qr-animation');
                }, 500);
            }
        }

        function confirmPayment(method) {
            // Show loader
            const loader = document.getElementById('paymentLoader');
            loader.style.display = 'block';
            
            // Hide payment sections
            document.getElementById('upiPayment').style.display = 'none';
            document.getElementById('cashPayment').style.display = 'none';
            
            // Prepare order data
            const itemsArray = Object.entries(JSON.parse('<%- JSON.stringify(items) %>')).map(([key, value]) => ({
                name: value.name,
                price: value.price,
                quantity: value.quantity
            }));

            const orderData = {
                paymentMethod: method,
                restaurantId: '<%= restaurantId %>',
                tableNumber: '<%= tableNumber %>',
                items: itemsArray,
                total: <%= total %>,
                status: 'pending',
                paymentStatus: method === 'upi' ? 'paid' : 'pending',
                timestamp: new Date().toISOString()
            };

            // Store order confirmation in localStorage
            const orderKey = `order_${orderData.restaurantId}_${orderData.tableNumber}_${cartId}`;
            localStorage.setItem(orderKey, JSON.stringify(orderData));

            // Send order data to backend
            fetch(`/orders/${orderData.restaurantId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(orderData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Hide loader
                loader.style.display = 'none';
                
                // Show confirmation
                const confirmation = document.getElementById('orderConfirmation');
                confirmation.style.display = 'block';
                
                // Set confirmation message based on payment method
                const confirmMsg = document.getElementById('confirmationMessage');
                if (method === 'upi') {
                    confirmMsg.innerText = 'Your payment via UPI has been received.';
                } else {
                    confirmMsg.innerText = 'Please pay in cash upon delivery/pickup.';
                }

                // Display order ID if available
                if (data.orderId) {
                    document.getElementById('orderId').innerText = `Order ID: ${data.orderId}`;
                }
                
                // Hide payment buttons
                document.getElementById('upiOption').style.display = 'none';
                document.getElementById('cashOption').style.display = 'none';
            })
            .catch(error => {
                console.error('Error:', error);
                alert('There was an error processing your order. Please try again.');
                loader.style.display = 'none';
                // Remove the order from localStorage if there was an error
                localStorage.removeItem(orderKey);
            });
        }

        function clearCartStorage() {
            // Clear the current cart ID
            localStorage.removeItem('currentCartId');
            
            // Clear the cart for this restaurant
            localStorage.removeItem(`cart-${orderData.restaurantId}`);
            
            // Clear any order confirmations for this restaurant and table
            const orderKey = `order_${orderData.restaurantId}_${orderData.tableNumber}`;
            localStorage.removeItem(orderKey);
        }
    </script>
    <script src="index.js"></script>
</body>
</html>